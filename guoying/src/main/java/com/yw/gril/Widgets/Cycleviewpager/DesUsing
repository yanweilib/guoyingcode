说明：
        图片轮播


使用：
    layout:
        <RelativeLayout
            android:layout_width="match_parent"
            android:layout_height="200dip">
            <fragment
                android:id="@+id/fragment_cycle"
                android:name="com.yungui.kindergarten.view.cycleviewpager.CycleFragment"
                android:layout_width="match_parent"
                android:layout_height="match_parent" />
        </RelativeLayout>


     activity:
         private List<ImageView> views = new ArrayList<ImageView>();
         private List<ADInfo> infos = new ArrayList<ADInfo>();
         private CycleFragment cycleFragment;
             private String[] imageUrls = {"http://img.taodiantong.cn/v55183/infoimg/2013-07/130720115322ky.jpg",
                     "http://pic30.nipic.com/20130626/8174275_085522448172_2.jpg",
                     "http://pic18.nipic.com/20111215/577405_080531548148_2.jpg",
                     "http://pic15.nipic.com/20110722/2912365_092519919000_2.jpg",
                     "http://pic.58pic.com/58pic/12/64/27/55U58PICrdX.jpg"};

         cycleFragment = (CycleFragment) getActivity().getFragmentManager()
                        .findFragmentById(R.id.fragment_cycle);



                             for(int i = 0; i < imageUrls.length; i ++){
                                    ADInfo info = new ADInfo();
                                    info.setUrl(imageUrls[i]);
                                    info.setContent("图片-->" + i );
                                    infos.add(info);
                                }

                                // 将最后一个ImageView添加进来
                                views.add(ViewFactory.getImageView(context, infos.get(infos.size() - 1).getUrl()));
                                for (int i = 0; i < infos.size(); i++) {
                                    views.add(ViewFactory.getImageView(context, infos.get(i).getUrl()));
                                }
                                // 将第一个ImageView添加进来
                                views.add(ViewFactory.getImageView(context, infos.get(0).getUrl()));

                                // 设置循环，在调用setData方法前调用
                                cycleFragment.setCycle(true);

                                // 在加载数据前设置是否循环
                                cycleFragment.setData(views, infos, mAdCycleViewListener);
                                //设置轮播
                                cycleFragment.setWheel(true);

                                // 设置轮播时间，默认5000ms
                                cycleFragment.setTime(2000);
                                //设置圆点指示图标组居中显示，默认靠右
                                cycleFragment.setIndicatorCenter();